package com.jqwong.music.repository.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jqwong.music.repository.entity.Artist;
import com.jqwong.music.repository.entity.Favorite;
import com.jqwong.music.repository.entity.History;
import com.jqwong.music.repository.entity.HotSearch;
import com.jqwong.music.repository.entity.Media;
import com.jqwong.music.repository.entity.Sheet;
import com.jqwong.music.repository.entity.SheetInfo;

import com.jqwong.music.repository.dao.ArtistDao;
import com.jqwong.music.repository.dao.FavoriteDao;
import com.jqwong.music.repository.dao.HistoryDao;
import com.jqwong.music.repository.dao.HotSearchDao;
import com.jqwong.music.repository.dao.MediaDao;
import com.jqwong.music.repository.dao.SheetDao;
import com.jqwong.music.repository.dao.SheetInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig artistDaoConfig;
    private final DaoConfig favoriteDaoConfig;
    private final DaoConfig historyDaoConfig;
    private final DaoConfig hotSearchDaoConfig;
    private final DaoConfig mediaDaoConfig;
    private final DaoConfig sheetDaoConfig;
    private final DaoConfig sheetInfoDaoConfig;

    private final ArtistDao artistDao;
    private final FavoriteDao favoriteDao;
    private final HistoryDao historyDao;
    private final HotSearchDao hotSearchDao;
    private final MediaDao mediaDao;
    private final SheetDao sheetDao;
    private final SheetInfoDao sheetInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        artistDaoConfig = daoConfigMap.get(ArtistDao.class).clone();
        artistDaoConfig.initIdentityScope(type);

        favoriteDaoConfig = daoConfigMap.get(FavoriteDao.class).clone();
        favoriteDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        hotSearchDaoConfig = daoConfigMap.get(HotSearchDao.class).clone();
        hotSearchDaoConfig.initIdentityScope(type);

        mediaDaoConfig = daoConfigMap.get(MediaDao.class).clone();
        mediaDaoConfig.initIdentityScope(type);

        sheetDaoConfig = daoConfigMap.get(SheetDao.class).clone();
        sheetDaoConfig.initIdentityScope(type);

        sheetInfoDaoConfig = daoConfigMap.get(SheetInfoDao.class).clone();
        sheetInfoDaoConfig.initIdentityScope(type);

        artistDao = new ArtistDao(artistDaoConfig, this);
        favoriteDao = new FavoriteDao(favoriteDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);
        hotSearchDao = new HotSearchDao(hotSearchDaoConfig, this);
        mediaDao = new MediaDao(mediaDaoConfig, this);
        sheetDao = new SheetDao(sheetDaoConfig, this);
        sheetInfoDao = new SheetInfoDao(sheetInfoDaoConfig, this);

        registerDao(Artist.class, artistDao);
        registerDao(Favorite.class, favoriteDao);
        registerDao(History.class, historyDao);
        registerDao(HotSearch.class, hotSearchDao);
        registerDao(Media.class, mediaDao);
        registerDao(Sheet.class, sheetDao);
        registerDao(SheetInfo.class, sheetInfoDao);
    }
    
    public void clear() {
        artistDaoConfig.clearIdentityScope();
        favoriteDaoConfig.clearIdentityScope();
        historyDaoConfig.clearIdentityScope();
        hotSearchDaoConfig.clearIdentityScope();
        mediaDaoConfig.clearIdentityScope();
        sheetDaoConfig.clearIdentityScope();
        sheetInfoDaoConfig.clearIdentityScope();
    }

    public ArtistDao getArtistDao() {
        return artistDao;
    }

    public FavoriteDao getFavoriteDao() {
        return favoriteDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

    public HotSearchDao getHotSearchDao() {
        return hotSearchDao;
    }

    public MediaDao getMediaDao() {
        return mediaDao;
    }

    public SheetDao getSheetDao() {
        return sheetDao;
    }

    public SheetInfoDao getSheetInfoDao() {
        return sheetInfoDao;
    }

}
