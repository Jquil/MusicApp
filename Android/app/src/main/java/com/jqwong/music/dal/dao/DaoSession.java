package com.jqwong.music.dal.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jqwong.music.entity.Billboard;
import com.jqwong.music.entity.FavoriteArtist;
import com.jqwong.music.entity.FavoriteMedia;
import com.jqwong.music.entity.HotSearchRecord;
import com.jqwong.music.entity.Media;
import com.jqwong.music.entity.SearchRecord;
import com.jqwong.music.entity.Sheet;
import com.jqwong.music.entity.SheetInfo;

import com.jqwong.music.dal.dao.BillboardDao;
import com.jqwong.music.dal.dao.FavoriteArtistDao;
import com.jqwong.music.dal.dao.FavoriteMediaDao;
import com.jqwong.music.dal.dao.HotSearchRecordDao;
import com.jqwong.music.dal.dao.MediaDao;
import com.jqwong.music.dal.dao.SearchRecordDao;
import com.jqwong.music.dal.dao.SheetDao;
import com.jqwong.music.dal.dao.SheetInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig billboardDaoConfig;
    private final DaoConfig favoriteArtistDaoConfig;
    private final DaoConfig favoriteMediaDaoConfig;
    private final DaoConfig hotSearchRecordDaoConfig;
    private final DaoConfig mediaDaoConfig;
    private final DaoConfig searchRecordDaoConfig;
    private final DaoConfig sheetDaoConfig;
    private final DaoConfig sheetInfoDaoConfig;

    private final BillboardDao billboardDao;
    private final FavoriteArtistDao favoriteArtistDao;
    private final FavoriteMediaDao favoriteMediaDao;
    private final HotSearchRecordDao hotSearchRecordDao;
    private final MediaDao mediaDao;
    private final SearchRecordDao searchRecordDao;
    private final SheetDao sheetDao;
    private final SheetInfoDao sheetInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        billboardDaoConfig = daoConfigMap.get(BillboardDao.class).clone();
        billboardDaoConfig.initIdentityScope(type);

        favoriteArtistDaoConfig = daoConfigMap.get(FavoriteArtistDao.class).clone();
        favoriteArtistDaoConfig.initIdentityScope(type);

        favoriteMediaDaoConfig = daoConfigMap.get(FavoriteMediaDao.class).clone();
        favoriteMediaDaoConfig.initIdentityScope(type);

        hotSearchRecordDaoConfig = daoConfigMap.get(HotSearchRecordDao.class).clone();
        hotSearchRecordDaoConfig.initIdentityScope(type);

        mediaDaoConfig = daoConfigMap.get(MediaDao.class).clone();
        mediaDaoConfig.initIdentityScope(type);

        searchRecordDaoConfig = daoConfigMap.get(SearchRecordDao.class).clone();
        searchRecordDaoConfig.initIdentityScope(type);

        sheetDaoConfig = daoConfigMap.get(SheetDao.class).clone();
        sheetDaoConfig.initIdentityScope(type);

        sheetInfoDaoConfig = daoConfigMap.get(SheetInfoDao.class).clone();
        sheetInfoDaoConfig.initIdentityScope(type);

        billboardDao = new BillboardDao(billboardDaoConfig, this);
        favoriteArtistDao = new FavoriteArtistDao(favoriteArtistDaoConfig, this);
        favoriteMediaDao = new FavoriteMediaDao(favoriteMediaDaoConfig, this);
        hotSearchRecordDao = new HotSearchRecordDao(hotSearchRecordDaoConfig, this);
        mediaDao = new MediaDao(mediaDaoConfig, this);
        searchRecordDao = new SearchRecordDao(searchRecordDaoConfig, this);
        sheetDao = new SheetDao(sheetDaoConfig, this);
        sheetInfoDao = new SheetInfoDao(sheetInfoDaoConfig, this);

        registerDao(Billboard.class, billboardDao);
        registerDao(FavoriteArtist.class, favoriteArtistDao);
        registerDao(FavoriteMedia.class, favoriteMediaDao);
        registerDao(HotSearchRecord.class, hotSearchRecordDao);
        registerDao(Media.class, mediaDao);
        registerDao(SearchRecord.class, searchRecordDao);
        registerDao(Sheet.class, sheetDao);
        registerDao(SheetInfo.class, sheetInfoDao);
    }
    
    public void clear() {
        billboardDaoConfig.clearIdentityScope();
        favoriteArtistDaoConfig.clearIdentityScope();
        favoriteMediaDaoConfig.clearIdentityScope();
        hotSearchRecordDaoConfig.clearIdentityScope();
        mediaDaoConfig.clearIdentityScope();
        searchRecordDaoConfig.clearIdentityScope();
        sheetDaoConfig.clearIdentityScope();
        sheetInfoDaoConfig.clearIdentityScope();
    }

    public BillboardDao getBillboardDao() {
        return billboardDao;
    }

    public FavoriteArtistDao getFavoriteArtistDao() {
        return favoriteArtistDao;
    }

    public FavoriteMediaDao getFavoriteMediaDao() {
        return favoriteMediaDao;
    }

    public HotSearchRecordDao getHotSearchRecordDao() {
        return hotSearchRecordDao;
    }

    public MediaDao getMediaDao() {
        return mediaDao;
    }

    public SearchRecordDao getSearchRecordDao() {
        return searchRecordDao;
    }

    public SheetDao getSheetDao() {
        return sheetDao;
    }

    public SheetInfoDao getSheetInfoDao() {
        return sheetInfoDao;
    }

}
